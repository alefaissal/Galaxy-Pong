{"version":3,"sources":["src/settings.js","src/partials/Board.js","src/partials/Paddle.js","src/partials/Ball.js","src/partials/PowerUp.js","src/partials/Score.js","src/partials/Game.js","src/index.js"],"names":["SVG_NS","KEYS","a","z","up","down","spaceBar","c","b","m","n","Board","width","height","svg","rect","document","createElementNS","setAttributeNS","line","appendChild","Paddle","boardHeight","x","y","colour","upKey","downKey","speed","score","keyState","addEventListener","event","key","console","log","Ball","radius","boardWidth","direction","reset","finalX","finalY","ping","Audio","pingSound","ping2","pingSound2","goalSound","goal","vy","Math","floor","random","vx","abs","hitLeft","hitRight","hitTop","hitBottom","player1","player2","play","player","wallCollision","paddleCollision","circle","rightGoal","leftGoal","PowerUp","args","Score","size","text","textContent","Game","element","gameElement","getElementById","board","paddleWidth","paddleHeight","boardGap","ballRadius","multiBallArray","isMultiBall","topScore","score1","score2","ball","pause","multiBall","i","innerHTML","alert","window","location","reload","render","showBallXY","forEach","game","gameLoop","requestAnimationFrame"],"mappings":"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","file":"src.34f24351.js","sourceRoot":"..","sourcesContent":["export const SVG_NS = \"http://www.w3.org/2000/svg\";\n\nexport const KEYS = {\n    a: \"a\",        // player 1 up key\n    z: \"z\",        // player 1 down key\n    up: \"ArrowUp\",       // player 2 up key\n    down: \"ArrowDown\",     // player 2 down key\n    spaceBar: \" \", // Pause the game\n    c: \"c\",        // change the ball\n    b: \"b\",        // change the ball back\n    m: \"m\",       // create multiple ball\n    n: \"n\",       // take away multiple ball\n};\n\n","import { SVG_NS } from \"../settings\";\n\nexport default class Board {\n    constructor(width, height) {\n        this.width = width;\n        this.height = height;\n    }\n    render(svg) {\n        let rect = document.createElementNS(SVG_NS, 'rect');\n        rect.setAttributeNS(null, 'fill', '#353535');\n        rect.setAttributeNS(null, 'width', this.width);\n        rect.setAttributeNS(null, 'height', this.height);\n\n        let line = document.createElementNS(SVG_NS, 'line');\n        line.setAttributeNS(null, 'x1', (this.width / 2));\n        line.setAttributeNS(null, 'y1', 0);\n        line.setAttributeNS(null, 'x2', (this.width / 2));\n        line.setAttributeNS(null, 'y2', this.height);\n\n        line.setAttributeNS(null, 'stroke', 'white');\n        line.setAttributeNS(null, 'stroke-dasharray', '20, 15');\n        line.setAttributeNS(null, 'stroke-width', '4');\n\n        svg.appendChild(rect);\n        svg.appendChild(line);\n    }\n}","import { SVG_NS, KEYS } from \"../settings\";\n\nexport default class Paddle {\n    constructor(boardHeight, width, height, x, y, colour = 'white', upKey, downKey) {\n        this.boardHeight = boardHeight;\n        this.width = width;\n        this.height = height;\n        this.x = x;\n        this.y = y;\n        this.speed = 5;\n        this.score = 0;\n        this.colour = colour;\n        this.upKey = upKey;\n        this.downKey = downKey;\n        this.keyState = {};\n\n        document.addEventListener(\"keydown\", event => {\n            this.keyState[event.key] = true;\n        });\n\n        document.addEventListener(\"keyup\", event => {\n            this.keyState[event.key] = false;\n        });\n    }\n\n    up() {\n        if (this.y > 0) {\n            console.log('move up');\n            this.y = this.y - this.speed;\n        }\n    }\n    down() {\n        if (this.y < (this.boardHeight - this.height)) {\n            console.log(\"move down\");\n            this.y = this.y + this.speed;\n        }\n    }\n\n    render(svg) {\n\n        if (this.keyState[KEYS.a] && this.upKey === KEYS.a) {\n            this.up();\n        }\n        if (this.keyState[KEYS.z] && this.downKey === KEYS.z) {\n            this.down();\n        }\n        if (this.keyState[KEYS.up] && this.upKey === KEYS.up) {\n            this.up();\n        }\n        if (this.keyState[KEYS.down] && this.downKey === KEYS.down) {\n            this.down();\n        }\n\n\n        let rect = document.createElementNS(SVG_NS, 'rect');\n        rect.setAttributeNS(null, 'fill', this.colour);\n\n        rect.setAttributeNS(null, 'width', this.width);\n        rect.setAttributeNS(null, 'height', this.height);\n\n        rect.setAttributeNS(null, \"x\", this.x);\n        rect.setAttributeNS(null, \"y\", this.y);\n\n        svg.appendChild(rect);\n    }\n}","import { SVG_NS } from \"../settings\";\nimport Board from \"./Board\";\nimport Game from \"./Game\";\nimport pingSound from \"../../public/sounds/pong-01.wav\";\nimport pingSound2 from \"../../public/sounds/pong-02.wav\";\nimport goal from \"../../public/sounds/goal.wav\";\n//import { runInThisContext } from \"vm\";\n\nexport default class Ball {\n    constructor(radius, boardWidth, boardHeight, colour = \"white\") {\n        this.radius = radius;\n        this.boardWidth = boardWidth;\n        this.boardHeight = boardHeight;\n        this.direction = 1; //used in vx to set/change the direction for start and goal\n        this.colour = colour;\n\n        this.reset();\n\n        this.finalX;\n        this.finalY;\n\n        this.ping = new Audio(pingSound);\n        this.ping2 = new Audio(pingSound2);\n        this.goalSound = new Audio(goal);\n    }\n\n    reset() {\n        this.x = this.boardWidth / 2;\n        this.y = this.boardHeight / 2;\n\n        this.vy = 0;\n        while (this.vy === 0) {\n            this.vy = (Math.floor(Math.random() * 10 - 5));  // can take the Math.floor off \n        }\n        console.log(\"vy\", this.vy);\n\n        this.vx = (this.direction * (6 - Math.abs(this.vy))) * (this.boardWidth / 512);\n\n        console.log(\"vx\", this.vx);\n\n        this.finalX = this.x;\n        this.finalY = this.y;\n    }\n\n    wallCollision() {\n        const hitLeft = this.x - this.radius <= 0;\n        const hitRight = this.x + this.radius >= this.boardWidth;\n        const hitTop = this.y - this.radius <= 0;\n        const hitBottom = this.y + this.radius >= this.boardHeight;\n\n        if (hitLeft || hitRight) {\n            this.vx = -this.vx;\n        } else if (hitTop || hitBottom) {\n            this.vy *= -1;        // should use the same syntax, but just for learning purpose.\n        }\n\n        this.finalX = this.x;\n        this.finalY = this.y;\n    }\n\n    paddleCollision(player1, player2) {\n        if ((this.y >= player2.y && this.y <= player2.y + player2.height) ||\n            (this.y >= player1.y && this.y <= player1.y + player2.height)) {\n            if (this.vx > 0) {\n                if (this.x + this.radius >= player2.x &&\n                    this.x + this.radius <= player2.x + player2.width) {\n                    this.vx = -this.vx;\n                    this.ping.play();\n                }\n            } else {\n                if (this.x - this.radius <= player1.x + player1.width &&\n                    this.x - this.radius >= player1.x) {\n                    this.vx = -this.vx;\n                    this.ping2.play();\n                }\n            }\n        }\n        this.finalX = this.x;\n        this.finalY = this.y;\n    }\n\n    goal(player) {\n        player.score++;\n        this.goalSound.play();\n        this.reset();\n        this.direction = -this.direction;\n        console.log(player.score);\n    }\n\n    render(svg, player1, player2) {\n\n        this.x += this.vx;\n        this.y += this.vy;\n\n        this.wallCollision();\n        this.paddleCollision(player1, player2);\n\n        let circle = document.createElementNS(SVG_NS, 'circle');\n        circle.setAttributeNS(null, 'fill', this.colour);\n        circle.setAttributeNS(null, 'r', this.radius);\n        circle.setAttributeNS(null, 'cx', this.x);\n        circle.setAttributeNS(null, 'cy', this.y);\n        svg.appendChild(circle);\n\n        const rightGoal = this.x + this.radius >= this.boardWidth;\n        const leftGoal = this.x - this.radius <= 0;\n\n        if (rightGoal) {\n            this.goal(player1);\n            if (player2.height >= 10) {\n                player2.height -= 5;\n            }\n            if (player1.height <= 100) {\n                player1.height += 5;\n            }\n        } else if (leftGoal) {\n            this.goal(player2);\n            if (player1.height >= 20) {\n                player1.height -= 10;\n            }\n            if (player2.height <= 200) {\n                player2.height += 10;\n            }\n        }\n    }\n}\n","import { SVG_NS } from \"../settings\";\nimport Ball from './Ball';\n\nexport default class PowerUp extends Ball {\n    constructor(...args) {\n        super(...args);\n    }\n}","import { SVG_NS } from \"../settings\";\n\nexport default class Score {\n  constructor(x, y, size, colour) {\n    this.x = x;\n    this.y = y;\n    this.size = size;  // font-size\n    this.colour = colour;\n  }\n\n  render(svg, score) {\n    let text = document.createElementNS(SVG_NS, 'text');\n\n    text.setAttributeNS(null, 'x', this.x);\n    text.setAttributeNS(null, 'y', this.y);\n    text.setAttributeNS(null, 'font-size', this.size);\n    text.setAttributeNS(null, 'fill', this.colour);\n    text.setAttributeNS(null, 'font-family', '\"Silkscreen Web\", monotype');\n\n    text.textContent = score;\n    svg.appendChild(text);\n  }\n\n}","import Board from './Board';\nimport Paddle from './Paddle';\nimport Ball from './Ball';\nimport PowerUp from './PowerUp';\nimport Score from './Score';\nimport { SVG_NS, KEYS } from \"../settings\";\n\nexport default class Game {\n\n  constructor(element, width, height) {\n    this.element = element;\n    this.width = width;\n    this.height = height;\n\n    this.gameElement = document.getElementById(this.element);\n    this.board = new Board(this.width, this.height);\n\n    this.paddleWidth = 8 * (width / 512); /// think about this more.\n    this.paddleHeight = 56 * (width / 512);\n    this.boardGap = 10 * (width / 512);\n\n    this.ballRadius = 6 * (width / 512);\n\n    this.multiBallArray = [];         // multiball\n    this.isMultiBall = false;   // multiball\n\n    this.topScore = 10;\n\n    this.player1 = new Paddle(\n      this.height,\n      this.paddleWidth,\n      this.paddleHeight,\n      this.boardGap,\n      ((this.height - this.paddleHeight) / 2),\n      \"red\",\n      KEYS.a,\n      KEYS.z\n    );\n\n    this.player2 = new Paddle(\n      this.height,\n      this.paddleWidth,\n      this.paddleHeight,\n      (this.width - (this.boardGap + this.paddleWidth)),\n      ((this.height - this.paddleHeight) / 2),\n      \"green\",\n      KEYS.up,\n      KEYS.down\n    );\n\n\n    this.score1 = new Score(this.width / 4 - 40, this.height / 2 + 40, 150, 'skyblue');\n    this.score2 = new Score(3 * this.width / 4 - 40, this.height / 2 + 40, 150, 'skyblue');\n\n    this.ball = new Ball(this.ballRadius, this.board.width, this.board.height, 'grey');\n\n    document.addEventListener('keydown', (event) => {\n      switch (event.key) {\n        case KEYS.spaceBar:\n          this.pause = !this.pause;\n          break;\n\n        case KEYS.c:\n          this.ball = new Ball(this.ballRadius + 10, this.board.width, this.board.height, 'red');\n          this.player1.height = 26 * (width / 512);\n          this.player2.height = 26 * (width / 512);\n          break;\n\n        case KEYS.b:\n          this.ball = new Ball(this.ballRadius, this.board.width, this.board.height, 'grey');\n          this.player1.height = 56 * (width / 512);\n          this.player2.height = 56 * (width / 512);\n          break;\n\n        case KEYS.m:\n          this.multiBall();\n          console.log(\"top score\" + this.topScore);\n          break;\n\n        case KEYS.n:\n          this.isMultiBall = false;\n          if (this.player1.score >= this.player2.score) {\n            this.topScore = this.player1.score + 10;\n            console.log(\"top score\" + this.topScore);\n          } else {\n            this.topScore = this.player2.score + 10;\n          }\n          break;\n      }\n    });\n\n\n  }// end of constructor\n\n  multiBall() {\n    this.isMultiBall = true;                  // multiball\n    for (let i = 0; i <= 20; i++) {\n      this.multiBallArray[i] = new Ball(15, this.board.width, this.board.height, 'white');\n    }\n    this.topScore = 100;\n    console.log(this.multiBallArray);\n  }\n\n  showBallXY(ball) {\n    ball = this.ball;\n    let text = document.getElementById(\"ballXY\");\n    text.innerHTML = \"Ball X = \" + ball.finalX + \" Ball Y = \" + ball.finalY;\n\n  }\n\n  render() {\n    if (this.player1.score === this.topScore) {\n      alert(\"GAME OVER\" + \"\\n\" +\n        \"Player One wins!!\" + \"\\n\" +\n        \"Refresh the page to play again\");\n      window.location.reload();\n    }\n    if (this.player2.score === this.topScore) {\n      alert(\"GAME OVER\" + \"\\n\" +\n        \"Player Two wins!!\" + \"\\n\" +\n        \"Refresh the page to play again\");\n      window.location.reload();\n    }\n    else {\n\n      if (this.pause) {\n        return;\n      }\n\n      this.gameElement.innerHTML = ''; // clear the html before appending to fix a render bug 🐞\n      let svg = document.createElementNS(SVG_NS, \"svg\");\n      svg.setAttributeNS(null, \"width\", this.width);\n      svg.setAttributeNS(null, \"height\", this.height);\n      svg.setAttributeNS(null, \"viewBox\", `0 0 ${this.width} ${this.height}`);\n      this.gameElement.appendChild(svg);\n      this.board.render(svg);\n      this.ball.render(svg, this.player1, this.player2);\n\n      this.player1.render(svg);\n      this.player2.render(svg);\n\n      this.showBallXY(svg, this.ball);\n      this.score1.render(svg, this.player1.score);\n      this.score2.render(svg, this.player2.score);\n\n      // multiball\n      if (this.isMultiBall) {\n        this.multiBallArray.forEach(ball => {\n          ball.render(svg, this.player1, this.player2);\n        });\n      }\n    }\n  }\n}","import './styles/game.css';\nimport Game from './partials/Game';\n\n// create a game instance\nconst game = new Game('game', 1024, 512);\nalert(\"Instruction for playing using the keyboard:\" + \"\\n\" +\n  \"a and z for up and down Player One (left Paddle)\" + \"\\n\" +\n  \"arrow up and arrow down for Player Two (left paddle)\" + \"\\n\" +\n  \"c and b  for change sizes of: ball and paddles\" + \"\\n\" +\n  \"m and n for deploy and finish Multi Balls\");\n\n(function gameLoop() {\n  game.render();\n  requestAnimationFrame(gameLoop);\n})();\n"]}